@Misc{haskell2010,
  key = 	 {Haskell 2010},
  OPTauthor = 	 {},
  title = 	 {{Haskell 2010 Language Report}},
  howpublished = {{\small {\tt http://www.haskell.org/onlinereport/haskell2010/}}},
}

@BOOK{SML,
	AUTHOR = {Robin Milner and Mads Tofte and Robert Harper},
	TITLE = {The Definition of Standard ML},
	PUBLISHER = {MIT Press},
	YEAR = {1989},
}

@inproceedings{Agda-overview,
  author = {{Ana Bove, Peter Dybjer and Ulf Norell}},
  title  = {{A Brief Overview of Agda -- A Functional Language with Dependent Types}},
  booktitle = {Proceedings of TPHOLs (Theorem Proving in Higher-Order Logics)},
  year = {2009}
}

@book{Coq-Art,
	AUTHOR = {{Yves Bertot and Pierre Cast\'eran}},
	TITLE = {{Interactive Theorem Proving and Program Development,
                  Coq'Art: The Calculus of Inductive Constructions}},
	PUBLISHER = {Texts in Theoretical Computer Science},
	YEAR = {2004}
}

@article{Ambiguity-and-context-dependent-overloading-JBCS13,
        author = {{Rodrigo Ribeiro and Carlos Camar\~ao}},
        title = {{Ambiguity and context-dependent overloading}},
	Journal = {{Journal of the Brazilian Computer Society}},
	YEAR = {2013},
        NOTE = {Aceito para publica\c{c}\~ao}
}

@PHDTHESIS{DoutoradoRodrigo2013,
	AUTHOR = {{Rodrigo Ribeiro}},
	TITLE = {{Classes de Tipos com M\'ultiplos Par\^ametros e Opcionais em Haskell}},
	SCHOOL = {Universidade Federal de Minas Gerais},
	YEAR = {2013},
}

@Misc{GHC,
  key          = {GHC},
  title        = {{Glasgow Haskell Compiler home page}},
  howpublished = {\verb+http://www.haskell.org/ghc/+},
}

@Misc{Epic,
  key          = {Epic},
  OPTauthor    = {{Edwin Brady}},
  title        = {{Epic --- a Supercombinator Compiler}},
  howpublished = {\verb+http://eb.host.cs.st-andrews.ac.uk/epic.php+}
}

@Misc{LLVM,
  key          = {LLVM},
  title        = {{LLVM Compiler Infrastructure}},
  howpublished = {\verb+llvm.org+}
}
@phdthesis{DiatchkiPhD,
  author    = {Iavor Sotirov Diatchki},
  title     = {High-Level Abstractions for Low-Level Programming},
  month     = {May},
  year      = {2007},
  school    = {OGI School of Science \& Engineering at Oregon Health \& Science University}
}
@book{Baier08,
 author = {Baier, Christel and Katoen, Joost-Pieter},
 title = {Principles of Model Checking (Representation and Mind Series)},
 year = {2008},
 isbn = {026202649X, 9780262026499},
 publisher = {The MIT Press},
}
@article{Faxen02,
 author = {Fax{\'e}n, Karl-Filip},
 title = {A static semantics for Haskell},
 journal = {J. Funct. Program.},
 issue_date = {July 2002},
 volume = {12},
 number = {5},
 month = jul,
 year = {2002},
 issn = {0956-7968},
 pages = {295--357},
 numpages = {63},
 url = {http://dx.doi.org/10.1017/S0956796802004380},
 doi = {10.1017/S0956796802004380},
 acmid = {968419},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
}
@inproceedings{lee07,
 author = {Daniel K. Lee and Karl Crary and Robert Harper},
 title = {Towards a mechanized metatheory of standard ML},
 booktitle = {POPL '07: Proceedings of the 34th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
 year = {2007},
 isbn = {1-59593-575-4},
 pages = {173--184},
 location = {Nice, France},
 doi = {http://doi.acm.org/10.1145/1190216.1190245},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }
@book{Tennent02,
  author    = {Robert D. Tennent},
  title     = {Specifying software - a hands-on introduction},
  publisher = {Cambridge University Press},
  year      = {2002},
  isbn      = {978-0-521-00401-5},
  pages     = {I-XII, 1-289}
}

@ARTICLE{Hudak96,
    author = {Paul Hudak},
    title = {Building Domain-Specific Embedded Languages},
    journal = {ACM Computing Surveys},
    year = {1996},
    volume = {28}
}
@Misc{Arduino,
  key          = {Arduino},
  title        = {{Arduino Homepage}},
  howpublished = {\verb+http://arduino.cc/en/+}
}
@Misc{RaspberryPi,
  key          = {Raspberry Pi},
  title        = {{Raspberry Pi Homepage}},
  howpublished = {\verb+http://www.raspberrypi.org/+}
}
@book{Fowler10,
 author = {Fowler, Martin},
 title = {Domain Specific Languages},
 year = {2010},
 isbn = {0321712943, 9780321712943},
 edition = {1st},
 publisher = {Addison-Wesley Professional},
}
@book{Luo94,
    author = {Luo, Zhaohui},
    day = {12},
    howpublished = {Hardcover},
    isbn = {0198538359},
    keywords = {book, calculus-of-constructions, cc, cumulativity, datatypes, ecc, inductive-types, strong-normalization, universes, utt},
    month = may,
    posted-at = {2010-11-06 15:45:14},
    priority = {0},
    publisher = {Oxford University Press, USA},
    series = {International Series of Monographs on Computer Science},
    title = {{Computation and Reasoning: A Type Theory for Computer Science}},
    url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0198538359},
    year = {1994}
}
@book{nordstrom90,
    abstract = {{In recent years several formalisms for program construction have been introduced. One such formalism is the type theory developed by Per Martin-LÂ¨of. It is well suited as a theory for program construction since it is possible to express both specifications and programs within the same formalism. Furthermore, the proof rules can be used to derive a correct program from a specification as well as to verify that a given program has a certain property. This book contains an introduction to type theory as a theory for program construction.}},
    address = {USA},
    author = {Nordstr\"{o}m, Bengt and Petersson, Kent and Smith, Jan M.},
    day = {19},
    howpublished = {Hardcover},
    isbn = {0198538146},
    keywords = {type-theory},
    month = jul,
    posted-at = {2008-08-07 16:37:39},
    priority = {2},
    publisher = {Oxford University Press},
    title = {{Programming in Martin-L\"{o}f's Type Theory: An Introduction}},
    url = {http://www.cs.chalmers.se/Cs/Research/Logic/book/},
    year = {1990}
}
@inproceedings{KNP11,
author={M. Kwiatkowska and G. Norman and D. Parker},
title={{PRISM} 4.0: Verification of Probabilistic Real-time Systems},
booktitle={Proc. 23rd International Conference on Computer Aided Verification (CAV'11)},
year={2011},

editor={G. Gopalakrishnan and S. Qadeer},
pages={585--591},
organization={},
publisher={Springer},
series={LNCS},
volume={6806},
address={},
month={},
note={},
key={}
}
@inproceedings{OuryS08,
  author    = {Nicolas Oury and
               Wouter Swierstra},
  title     = {The power of Pi},
  booktitle = {ICFP},
  year      = {2008},
  pages     = {39-50},
  ee        = {http://doi.acm.org/10.1145/1411204.1411213},
  crossref  = {DBLP:conf/icfp/2008},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@proceedings{DBLP:conf/icfp/2008,
  editor    = {James Hook and
               Peter Thiemann},
  title     = {Proceeding of the 13th ACM SIGPLAN international conference
               on Functional programming, ICFP 2008, Victoria, BC, Canada,
               September 20-28, 2008},
  booktitle = {ICFP},
  publisher = {ACM},
  year      = {2008},
  isbn      = {978-1-59593-919-7},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}
@book{Girard89,
 author = {Girard, Jean-Yves and Taylor, Paul and Lafont, Yves},
 title = {Proofs and types},
 year = {1989},
 isbn = {0-521-37181-3},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
}
@book{Sorensen06,
 author = {S{\o}rensen, Morten Heine and Urzyczyn, Pawel},
 title = {Lectures on the Curry-Howard Isomorphism, Volume 149 (Studies in Logic and the Foundations of Mathematics)},
 year = {2006},
 isbn = {0444520775},
 publisher = {Elsevier Science Inc.},
 address = {New York, NY, USA},
}
@inproceedings{Swierstra12,
 author = {Swierstra, Wouter},
 title = {xmonad in Coq: Programming a Window Manager in a Proof Assistant},
 booktitle = {Proceedings of the 2012 Symposium on Haskell},
 series = {Haskell '12},
 year = {2012},
 location = {Copenhagen, Denmark},
 pages = {131--136},
 doi = {10.1145/2364506.2364523},
}
@inproceedings{Berger93,
  author    = {Ulrich Berger},
  title     = {Program Extraction from Normalization Proofs},
  booktitle = {TLCA},
  year      = {1993},
  pages     = {91-106},
  ee        = {http://dx.doi.org/10.1007/BFb0037100},
  crossref  = {DBLP:conf/tlca/1993},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@proceedings{DBLP:conf/tlca/1993,
  editor    = {Marc Bezem and
               Jan Friso Groote},
  title     = {Typed Lambda Calculi and Applications, International Conference
               on Typed Lambda Calculi and Applications, TLCA '93, Utrecht,
               The Netherlands, March 16-18, 1993, Proceedings},
  booktitle = {TLCA},
  publisher = {Springer},
  series    = {Lecture Notes in Computer Science},
  volume    = {664},
  year      = {1993},
  isbn      = {3-540-56517-5},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}
@article{Loh10,
 author = {L\"{o}h, Andres and McBride, Conor and Swierstra, Wouter},
 title = {A Tutorial Implementation of a Dependently Typed Lambda Calculus},
 journal = {Fundam. Inf.},
 issue_date = {April 2010},
 volume = {102},
 number = {2},
 month = apr,
 year = {2010},
 issn = {0169-2968},
 pages = {177--207},
 numpages = {31},
 url = {http://dl.acm.org/citation.cfm?id=1883634.1883637},
 acmid = {1883637},
 publisher = {IOS Press},
 address = {Amsterdam, The Netherlands, The Netherlands},
}
@electronic{Coquand10,
    abstract = {{This paper presents a formal description of a small functional language with dependent types. The language contains data types, mutual recursive/inductive definitions and a universe of small types. The syntax, semantics and type system is specified in such a way that the implementation of a parser, interpreter and type checker is straightforward. The main difficulty is to design the conversion algorithm in such a way that it works for open expressions. The paper ends with a complete implementation in Haskell (around 400 lines of code). We are going to describe a small language with dependent types, its syntax, operational semantics and type system. This is in the spirit of the paper  â A simple applicative language: Mini-ML â by Cl\'{e}ment, Despeyroux, and Kahn [5], where they explain a small functional language.}},
    author = {Coquand, Thierry and Kinoshita, Yoshiki and Nordstr\"{o}m, Bengt and Takeyama, Makoto},
    keywords = {type-theory},
    priority = {0},
    title = {{A simple type-theoretic language: Mini-TT}},
    url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.156.1170}
}
@inproceedings{McBrideM04,
  author    = {Conor McBride and
               James McKinna},
  title     = {Functional pearl: {I am not a number-I am a free variable}},
  booktitle = {Haskell},
  year      = {2004},
  pages     = {1-9},
  ee        = {http://doi.acm.org/10.1145/1017472.1017477},
  crossref  = {DBLP:conf/haskell/2004},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@proceedings{DBLP:conf/haskell/2004,
  editor    = {Henrik Nilsson},
  title     = {Proceedings of the ACM SIGPLAN Workshop on Haskell, Haskell
               2004, Snowbird, UT, USA, September 22-22, 2004},
  booktitle = {Haskell},
  publisher = {ACM},
  year      = {2004},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}
@article{Abel02,
  author    = {Andreas Abel and
               Thorsten Altenkirch},
  title     = {A predicative analysis of structural recursion},
  journal   = {J. Funct. Program.},
  volume    = {12},
  number    = {1},
  year      = {2002},
  pages     = {1-41},
  ee        = {http://dx.doi.org/10.1017/S0956796801004191},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}
@book{Halmos60,
  added-at = {2008-02-20T03:42:09.000+0100},
  author = {Halmos, Paul},
  description = {Artigos e livros que tenho impresso},
  isbn = {0387900926},
  keywords = {impresso set theory},
  note = {Reprinted by Springer-Verlag, Undergraduate Texts in Mathematics, 1974},
  publisher = {Van Nostrand},
  timestamp = {2008-02-20T03:42:09.000+0100},
  title = {Naive Set Theory},
  year = 1960
}
@article{Barthe04,
  author    = {Gilles Barthe and
               Maria Jo{\~a}o Frade and
               E. Gim{\'e}nez and
               Luis Pinto and
               Tarmo Uustalu},
  title     = {Type-based termination of recursive definitions},
  journal   = {Mathematical Structures in Computer Science},
  volume    = {14},
  number    = {1},
  year      = {2004},
  pages     = {97-141},
  ee        = {http://dx.doi.org/10.1017/S0960129503004122},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}
@book{Sommerville95,
 author = {Sommerville, Ian},
 title = {Software engineering (5th ed.)},
 year = {1995},
 isbn = {0-201-42765-6},
 publisher = {Addison Wesley Longman Publishing Co., Inc.},
 address = {Redwood City, CA, USA},
}
@book{Myers04,
 author = {Myers, Glenford J. and Sandler, Corey},
 title = {The Art of Software Testing},
 year = {2004},
 isbn = {0471469122},
 publisher = {John Wiley \& Sons},
}
@book{Pierce02,
 author = {Pierce, Benjamin C.},
 title = {Types and Programming Languages},
 year = {2002},
 isbn = {0-262-16209-1},
 publisher = {MIT Press},
 address = {Cambridge, MA, USA},
}
@article{dB72,
  author = {N. G. de Bruijn},
  title = {Lambda Calculus Notation with Nameless Dummies, A Tool for Automatic Formula Manipulation, With Applications to the Church-Rosser Theorem},
  journal = {Indagationes Mathematicae (Koninglijke Nederlandse Akademie van Wetenschappen)},
  year = {1972},
  volume = {34},
  number = {5},
  pages = {381--392},
  note = {http://www.win.tue.nl/automath/archive/pdf/aut029.pdfElectronic Edition}
}
@MISC{Mcbride05,
    author = {Conor Mcbride},
    title = {Type-preserving renaming and substitution},
    year = {2005}
}
@misc{arduino-ml,
    author = {Raul Filipe Lopes Pimenta, Rodrigo Geraldo Ribeiro},
    title = {RepositÃ³rio on-line da linguagem arduino ML},
    url = {https://github.com/lives-group/arduino-ml},
    year = {2014}
}
@article{Robinson65,
 author = {Robinson, J. A.},
 title = {A Machine-Oriented Logic Based on the Resolution Principle},
 journal = {J. ACM},
 issue_date = {Jan. 1965},
 volume = {12},
 number = {1},
 month = jan,
 year = {1965},
 issn = {0004-5411},
 pages = {23--41},
 numpages = {19},
 url = {http://doi.acm.org/10.1145/321250.321253},
 doi = {10.1145/321250.321253},
 acmid = {321253},
 publisher = {ACM},
 address = {New York, NY, USA},
}
@article{Cousineau87,
title = "The categorical abstract machine ",
journal = "Science of Computer Programming ",
volume = "8",
number = "2",
pages = "173 - 202",
year = "1987",
note = "",
issn = "0167-6423",
doi = "http://dx.doi.org/10.1016/0167-6423(87)90020-7",
url = "http://www.sciencedirect.com/science/article/pii/0167642387900207",
author = "G. Cousineau and P.-L. Curien and M. Mauny",
abstract = "The Cartesian closed categories have been shown by several authors to provide the right framework of the model theory of Î»-calculus. The second author developed this as a syntactic equivalence between two calculi, giving rise to a new kind of combinatory logic: the categorical combinatory logic, where computations can be done through simple rewrite rules, and, as usual with combinators, avoiding problems with variable name clashes. This paper goes further (though not requiring a previous knowledge of categorical combinatory logic) and describes a very simple machine where categorical terms can be considered as code acting on a graph of values (the essential actions are LISP's âconsâ and âcdrâ, as well as ârplacdâ to implement recursion). The only saving mechanism is a stack containing pointers on code or on the graph. Abstractions are handled in the very same way as in P. Landin's \{SECD\} machine, using closures. The machine is called categorical abstract machine or CAM. The \{CAM\} is easier to grasp and prove than the \{SECD\} machine. The paper discusses the implementation of a real functional programming language, ML, through the CAM. A basic acquintance with Î»-calculus is required. "
}
@inproceedings{Girard95,
 author = {Girard, Jean-Yves},
 title = {Linear Logic: Its Syntax and Semantics},
 booktitle = {Proceedings of the Workshop on Advances in Linear Logic},
 year = {1995},
 isbn = {0-521-55961-8},
 pages = {1--42},
 numpages = {42},
 url = {http://dl.acm.org/citation.cfm?id=212876.212880},
 acmid = {212880},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
}
